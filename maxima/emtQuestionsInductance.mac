print("======================================");
kill(all);
print("example 8.1");

epsilon:8.85418782*10^(-12);

load("vect");

IB:1.5;
I:2.3;
mu:4*%pi*10^(-7);

x1:3;
y1:2;
z1:5;
x2:4;
y2:6;
z2:1;

N1:[x1,y1,z1];
N2:[x2,y2,z2];

L:N2-N1;
aL:L/sqrt(L.L);


Bmag:mu*IB/(2*%pi*(x^2+y^2))*[-y,x,0];
dL:[diff(x),diff(y),diff(z)];
integrand:express(I*dL~Bmag);

path:[x=x1+(x2-x1)*t,y=y1+(y2-y1)*t,z=z1+(z2-z1)*t];
sublis(path,integrand);
ev(%,diff);
 %, del(t) = 1;
integrate(%,t,0,1);
expand(%);
ansA:float(%);

print("============");
kill(all);
print("example 8.1");

epsilon:8.85418782*10^(-12);

load("vect");

IB:1.5;
I:2.3;
mu:4*%pi*10^(-7);
integrand:3.45*mu/(2*%pi*(17*t^2+22*t+13))*[4*(t+3),8*(2*t+1),17*t+11];
float(integrate(integrand,t,0,1));

print("======================================");
kill(all);
print("Q8.1");

epsilon:8.85418782*10^(-12);
mu:4*%pi*10^(-7);
load("vect");

q:-1.6*10^(-19);
m:3.1*10^(-31);
vi:3*10^5;
E:1.5;
tf:150*10^(-9);

eqV:m*'diff(v,t)-q*E=0;

ode2(eqV,v,t);
solV:ic1(%,t=0,v=0);
ev(rhs(%),t=tf);
vf:float([vi,0,%]);

eqL:m*'diff(x,t,2)-q*E=0;
ode2(eqL,x,t);
ic2(%,t=0,x=0,'diff(x,t)=0);
ev(rhs(%),t=3*10^(-6));
float(%);
P:float([vi*tf,0,%]);

absV:sqrt(vf.vf);
KE:float(1/2*m*absV^2);
print("======================================");
kill(all);
print("Q8.2");

epsilon:8.85418782*10^(-12);
mu:4*%pi*10^(-7);
load("vect");

q:-1.6*10^(-19);
m:3.1*10^(-31);
v:[0,0,10^6];
B:[0.3,-0.2,-0.4];
F:express(q*(v~B));
E:express(-1*v ~B);
print("======================================");
kill(all);
print("Q8.3");

epsilon:8.85418782*10^(-12);
mu:4*%pi*10^(-7);
load("vect");

q:1.2*10^(-6);
m:5*10^(-9);
v:10^3*[10,-30,20];

B:[2,-1,3];
E:[3,2,1];

a:float(1/m*express(q*E+q*v~B));
print("======================================");
kill(all);
print("Q8.4");

epsilon:8.85418782*10^(-12);
mu:4*%pi*10^(-7);
load("vect");

IB:5;
I:2;
A:[0,1,0];
B:[0,4,0];
C:[0,4,2];
D:[0,1,2];

Lba:B-A;
Lcb:C-B;
Ldc:D-C;
Lad:A-D;


Bmag:mu*IB/(2*%pi*y)*[-1,0,0];

integrand:express(I*[0,1,0]~Bmag);
FBA:float(integrate(integrand,y,1,4));

integrand:express(I*[0,0,1]~Bmag);
integrate(integrand,z,0,2);
FCB:float(ev(%,y=4));

integrand:express(I*[0,1,0]~Bmag);
integrate(integrand,y,4,1);
FDC:float(%);

integrand:express(I*[0,0,1]~Bmag);
integrate(integrand,z,2,0);
FAD:float(ev(%,y=1));

F:FBA+FCB+FDC+FAD;

display(FBA);
display(FCB);
display(FDC);
display(FAD);
display(F);
print("======================================");
kill(all);
print("Q8.5");

epsilon:8.85418782*10^(-12);
mu:4*%pi*10^(-7);
load("vect");

IB:10;
I:4;

x1:2;
y1:1;
z1:3;
x2:5;
y2:4;
z2:7;

N1:[x1,y1,z1];
N2:[x2,y2,z2];

L:N2-N1;
aL:L/sqrt(L.L);


Bmag:mu*IB/(2*%pi*(x^2+y^2))*[-y,x,0];
dL:[diff(x),diff(y),diff(z)];
integrand:express(I*dL~Bmag);

path:[x=x1+(x2-x1)*t,y=y1+(y2-y1)*t,z=z1+(z2-z1)*t];
sublis(path,integrand);
ev(%,diff);
 %, del(t) = 1;
integrate(%,t,0,1);
expand(%);
ansA:float(%);
print("======================================");
kill(all);
print("Q8.6");

epsilon:8.85418782*10^(-12);
mu:4*%pi*10^(-7);
load("vect");

K:[0,0.2,0];
B:[0,0,200*10^(-6)/(z^2+1)];

integrand:express(K~B);

integrate(integrate(%,z,minf,inf),y,1,3);
expand(%);
ansA:float(%);
print("======================================");
kill(all);
print("Q8.7");

epsilon:8.85418782*10^(-12);
mu:4*%pi*10^(-7);
load("vect");
IB:2.2;
I:8;
K:[0,0,I/0.004];
B:[0,IB*mu/(2*%pi*x),0];

integrand:express(K~B);

integrate(integrate(%,z,0,1),x,0.001,0.005);
expand(%);
ansA:float(%);
print("======================================");
kill(all);
print("Q8.8");

epsilon:8.85418782*10^(-12);

load("vect");


A:[-b,0,0];
B:[b,0,0];

Bmag:mu*I1/(2*%pi*(x^2+y^2))*[-y,x,0];

dF:express(I2*[1,0,0]~Bmag);
R:[x,y,0];
dT:express(R~dF);
integrand:dT;
integrate(integrand,x,-b,b);
T:ev((%),y=a);
print("======================================");
kill(all);
print("Q8.9");

epsilon:8.85418782*10^(-12);
mu:4*%pi*10^(-7);
load("vect");

IB:25;
I:6;
A:[2,0,0];
B:[5,0,0];
C:[5,0,4];
D:[2,0,4];

Lba:B-A;
Lcb:C-B;
Ldc:D-C;
Lad:A-D;

Bmag:5*[1,0,0];

dF:express(I*[1,0,0]~Bmag);
R:[x,0,0];
dT:express(R~dF);
integrand:dT;
TBA:float(integrate(integrand,x,2,5),x,2,5);


dF:express(I*[0,0,1]~Bmag);
R:[5,0,0];
dT:express(R~dF);
integrand:dT;
TCB:float(integrate(integrand,z,0,4),z,0,4);


dF:express(I*[1,0,0]~Bmag);
R:[x,0,0];
dT:express(R~dF);
integrand:dT;
TDC:float(integrate(integrand,x,5,2),x,5,2);


dF:express(I*[0,0,1]~Bmag);
R:[2,0,0];
dT:express(R~dF);
integrand:dT;
TAD:float(integrate(integrand,z,4,0),z,4,0);

TBA;
TCB;
TDC;
TAD;

T:TBA+TCB+TDC+TAD;
print("======================================");
kill(all);
print("Q8.10");
/*THIS TIME USING MAGNETIC MOMENTS */ 

epsilon:8.85418782*10^(-12);
mu:4*%pi*10^(-7);
load("vect");

IB:25;
I:6;
A:[2,0,0];
B:[5,0,0];
C:[5,0,4];
D:[2,0,4];

Lba:B-A;
Lcb:C-B;
Ldc:D-C;
Lad:A-D;

Bmag:5*[1,0,0];
dS:[0,-1,0];
dT:express(I*dS~Bmag);
integrand:dT;
T:float(integrate(integrate(integrand,x,2,5),z,0,4));

print("======================================");
kill(all);
print("Q8.11");

epsilon:8.85418782*10^(-12);
mu:4*%pi*10^(-7);
load("vect");

IB:25;
I:6;
A:[2,0,0];
B:[5,0,0];
C:[5,0,4];
D:[2,0,4];

Lba:B-A;
Lcb:C-B;
Ldc:D-C;
Lad:A-D;

Bmag:mu*IB/(2*%pi*x)*[0,1,0];

dF:express(I*[1,0,0]~Bmag);
R:[x,0,0];
dT:express(R~dF);
integrand:dT;
TBA:float(integrate(integrand,x,2,5),x,2,5);


dF:express(I*[0,0,1]~Bmag);
R:[5,0,z];
dT:express(R~dF);
integrand:dT;
float(integrate(integrand,z,0,4),z,0,4);
TCB:ev(%,x=5);

dF:express(I*[1,0,0]~Bmag);
R:[x,0,4];
dT:express(R~dF);
integrand:dT;
TDC:float(integrate(integrand,x,5,2),x,5,2);

dF:express(I*[0,0,1]~Bmag);
R:[2,0,z];
dT:express(R~dF);
integrand:dT;
float(integrate(integrand,z,4,0),z,4,0);
TAD:ev(%,x=2);

TBA;
TCB;
TDC;
TAD;
T:TBA+TCB+TDC+TAD;
print("======================================");
kill(all);
print("Q8.12");

epsilon:8.85418782*10^(-12);
mu:4*%pi*10^(-7);
load("vect");

B:1.5*[0,1,0];
N:500;
I:3;
R:0.02;
S:%pi*R^2*[1,0,0];

T:float(express(N*I*S~B));
print("======================================");
kill(all);
print("Q8.13");

epsilon:8.85418782*10^(-12);
mu:4*%pi*10^(-7);
load("vect");

chi:2.5;
B:0.15*z*[0,1,0];

uR:1+chi;
muu:float(uR*mu);

H:B/muu;
M:chi*H;


/* cartesian CURL 
Gx, Gy and Gz must be defined first as shown below
*/
Gx:0;
Gy:0.4*z/muu;
Gz:0;
G:[Gx,Gy,Gz];

AA:diff(Gz,y)-diff(Gy,z);
BB:diff(Gx,z)-diff(Gz,x);
CC:diff(Gy,x)-diff(Gx,y);

J:[AA,BB,CC];

Gx:0;
Gy:chi*0.4*z/muu;
Gz:0;
G:[Gx,Gy,Gz];

AA:diff(Gz,y)-diff(Gy,z);
BB:diff(Gx,z)-diff(Gz,x);
CC:diff(Gy,x)-diff(Gx,y);

Jb:[AA,BB,CC];

Gx:0;
Gy:0.4*z/mu;
Gz:0;
G:[Gx,Gy,Gz];

AA:diff(Gz,y)-diff(Gy,z);
BB:diff(Gx,z)-diff(Gz,x);
CC:diff(Gy,x)-diff(Gx,y);

JT:float([AA,BB,CC]);

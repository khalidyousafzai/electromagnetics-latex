Print("======================================");
kill(all);
print("Q12.7");
load("vect");
mu0:4*%pi*10^(-7);
epsilon0:8.85418782*10^(-12);
c:3*10^8;

f:2*50*10^6;
thetaI:45/180*%pi;

epsilonR1:1;
muR1:1;
sigma1:0;
epsilonR2:3.5;
muR2:1;
sigma2:4;

epsilon1:epsilonR1*epsilon0;
mu1:muR1*mu0;
epsilon2:epsilonR2*epsilon0;
mu2:muR2*mu0;

lambda:c/f;
thetaB:atan(sqrt(epsilon2/epsilon1));
float(%*180/%pi);
thetaT:float(asin(sin(thetaI)*sqrt(epsilonR1*muR1/(epsilonR2*muR2))));
float(%*180/%pi);

GammaParallel:float((-epsilonR2/epsilonR1*cos(thetaI)+sqrt(epsilonR2/epsilonR1-(sin(thetaI))^2))/(epsilonR2/epsilonR1*cos(thetaI)+sqrt(epsilonR2/epsilonR1-(sin(thetaI))^2)));
GammaPerp:float((cos(thetaI)-sqrt(epsilonR2/epsilonR1-(sin(thetaI))^2))/(cos(thetaI)+sqrt(epsilonR2/epsilonR1-(sin(thetaI))^2)));

refParallel:GammaParallel^2;
refPerp:GammaPerp^2;
ref:(refParallel+refPerp)/2;

AR:GammaPerp/GammaParallel;
Print("======================================");
kill(all);
print("Q12.8");
load("vect");
mu0:4*%pi*10^(-7);
epsilon0:8.85418782*10^(-12);
c:3*10^8;

f:2*50*10^6;
thetaI:30/180*%pi;

epsilonR1:1;
muR1:1;
sigma1:0;
epsilonR2:4;
muR2:1;
sigma2:4;

epsilon1:epsilonR1*epsilon0;
mu1:muR1*mu0;
epsilon2:epsilonR2*epsilon0;
mu2:muR2*mu0;

lambda:c/f;
thetaB:atan(sqrt(epsilon2/epsilon1));
float(%*180/%pi);
thetaT:float(asin(sin(thetaI)*sqrt(epsilonR1*muR1/(epsilonR2*muR2))));
float(%*180/%pi);

GammaParallel:float((-epsilonR2/epsilonR1*cos(thetaI)+sqrt(epsilonR2/epsilonR1-(sin(thetaI))^2))/(epsilonR2/epsilonR1*cos(thetaI)+sqrt(epsilonR2/epsilonR1-(sin(thetaI))^2)));
GammaPerp:float((cos(thetaI)-sqrt(epsilonR2/epsilonR1-(sin(thetaI))^2))/(cos(thetaI)+sqrt(epsilonR2/epsilonR1-(sin(thetaI))^2)));

refParallel:GammaParallel^2;
refPerp:GammaPerp^2;
ref:(refParallel+refPerp)/2;

AR:GammaPerp/GammaParallel;
Print("======================================");
kill(all);
print("Q12.9");
load("vect");
mu0:4*%pi*10^(-7);
epsilon0:8.85418782*10^(-12);
c:3*10^8;

f:2*50*10^6;
thetaI:40/180*%pi;

Eperp:8;
Eparallel:6;

epsilonR1:1;
muR1:1;
sigma1:0;
epsilonR2:3;
muR2:1;
sigma2:4;

epsilon1:epsilonR1*epsilon0;
mu1:muR1*mu0;
epsilon2:epsilonR2*epsilon0;
mu2:muR2*mu0;

lambda:c/f;
thetaB:atan(sqrt(epsilon2/epsilon1));
float(%*180/%pi);
thetaT:float(asin(sin(thetaI)*sqrt(epsilonR1*muR1/(epsilonR2*muR2))));
float(%*180/%pi);

GammaParallel:float((-epsilonR2/epsilonR1*cos(thetaI)+sqrt(epsilonR2/epsilonR1-(sin(thetaI))^2))/(epsilonR2/epsilonR1*cos(thetaI)+sqrt(epsilonR2/epsilonR1-(sin(thetaI))^2)));
GammaPerp:float((cos(thetaI)-sqrt(epsilonR2/epsilonR1-(sin(thetaI))^2))/(cos(thetaI)+sqrt(epsilonR2/epsilonR1-(sin(thetaI))^2)));

refParallel:GammaParallel^2;
refPerp:GammaPerp^2;
ref:(refParallel+refPerp)/2;

AR:float((Eperp*GammaPerp)/(Eparallel*GammaParallel));
Print("======================================");
kill(all);
print("Q12.10");
load("vect");
mu0:4*%pi*10^(-7);
epsilon0:8.85418782*10^(-12);
c:3*10^8;

f:2*50*10^6;
thetaI:60/180*%pi;

Eperp:8;
Eparallel:6;

epsilonR1:1;
muR1:1;
sigma1:0;
epsilonR2:3;
muR2:1;
sigma2:4;

epsilon1:epsilonR1*epsilon0;
mu1:muR1*mu0;
epsilon2:epsilonR2*epsilon0;
mu2:muR2*mu0;

lambda:c/f;
thetaB:atan(sqrt(epsilon2/epsilon1));
float(%*180/%pi);
thetaT:float(asin(sin(thetaI)*sqrt(epsilonR1*muR1/(epsilonR2*muR2))));
float(%*180/%pi);

GammaParallel:float((-epsilonR2/epsilonR1*cos(thetaI)+sqrt(epsilonR2/epsilonR1-(sin(thetaI))^2))/(epsilonR2/epsilonR1*cos(thetaI)+sqrt(epsilonR2/epsilonR1-(sin(thetaI))^2)));
GammaPerp:float((cos(thetaI)-sqrt(epsilonR2/epsilonR1-(sin(thetaI))^2))/(cos(thetaI)+sqrt(epsilonR2/epsilonR1-(sin(thetaI))^2)));

refParallel:GammaParallel^2;
refPerp:GammaPerp^2;
ref:(refParallel+refPerp)/2;

AR:float((Eperp*GammaPerp)/(Eparallel*GammaParallel));
Print("======================================");
kill(all);
print("example oblique on sea water");
load("vect");
mu0:4*%pi*10^(-7);
epsilon0:8.85418782*10^(-12);
c:3*10^8;

f:50*10^6;
omega:2*%pi*f;
thetaI:65/180*%pi;

epsilonR1:1;
muR1:1;
sigma1:0;
epsilonR2:78;
muR2:1;
sigma2:5;

epsilon1:epsilonR1*epsilon0;
mu1:muR1*mu0;
epsilon2:epsilonR2*epsilon0;
mu2:muR2*mu0;

Z1:float(%i*omega*mu1);
Y1:float(sigma1+%i*omega*epsilon1);
eta1:float(rectform(sqrt(Z1/Y1)));
gamma1:float(rectform(sqrt(Z1*Y1)));

Z2:float(%i*omega*mu2);
Y2:float(sigma2+%i*omega*epsilon2);
eta2:float(rectform(sqrt(Z2/Y2)));
gamma2:float(rectform(sqrt(Z2*Y2)));

beta2:imagpart(gamma2);
beta1:omega/c;

thetaT:float(asin(beta1/beta2*sin(thetaI)));
float(%/%pi*180);

gammaPerp:float(rectform((eta2*cos(thetaI)-eta1*cos(thetaT))/(eta2*cos(thetaI)+eta1*cos(thetaT))));
polarform(%);


gammaParallel:float(rectform((eta2*cos(thetaT)-eta1*cos(thetaI))/(eta1*cos(thetaI)+eta2*cos(thetaT))));
polarform(%);

tauPerp:1+gammaPerp;
polarform(%);
tauParallel:1+gammaParallel;
polarform(%);
